* st_iis2iclxx driver for imu MEMS sensors

Required properties for all bus drivers:
- compatible: must be one of:
              "st,iis2iclx"

Required properties for the i2c bindings:
- reg: i2c slave address

Required properties for the spi bindings:
- reg:               the chipselect index
- spi-max-frequency: maximal bus speed, should be set to 1000000 unless
                     constrained by external circuitry

Optional properties for all bus drivers:
- vdd-supply:     an optional regulator that needs to be on to provide
                  VDD power to the sensor.

- vddio-supply:   an optional regulator that needs to be on to provide
                  the VDD IO power to the sensor.

- st,int-pin:     the pin on the package that will be used to signal
                  "data ready" (valid values: 1 or 2, default: 1).

- st,mlc-int-pin: the pin on the package that will be used to signal
                  MLC/FSM event (valid values: 1 for int pin 1, 2 for
                  int pin 2 or 3 for both int pin, default: st,int-pin).

- mount-matrix:   mount rotation matrix.

                  Refer to iio/mount-matrix.txt for details.

- interrupts:     interrupt mapping for IRQ. It should be configured
                  with flags IRQ_TYPE_LEVEL_HIGH or IRQ_TYPE_LEVEL_LOW.

                  Refer to interrupt-controller/interrupts.txt for
                  generic interrupt client node bindings.

- st,module_id:   module identifier.
                  This is used by user-space to identify which devices
                  are part of the same module (particularly important for
                  supporting multiple sensors of the same type).

- st,xl_lpf_div: Bandwidth XL ODR divider, if set the value must be within
                 the range [2, 800].

- wakeup-source:  https://www.kernel.org/doc/Documentation/devicetree/bindings/power/wakeup-source.txt

Example for an spi iis2iclx device node:

iis2iclx-accel@0 {
	compatible = "st,iis2iclx";
	reg = <0x0>;
	spi-max-frequency = <1000000>;
	interrupt-parent = <&gpio0>;
	interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
	vddio-supply = <&sensors_vddio>;
	vdd-supply = <&sensors_vdd>;
	st,int-pin = <1>;
	st,mlc-int-pin = <2>;
	st,module_id = <1>;
	mount-matrix = "1", "0", "0",
		       "0", "1", "0",
		       "0", "0", "1";
};

Example for an i2c iis2iclxx device node (SA0 pulled down):

iis2iclxx-accel@0x6a {
	compatible = "st,iis2iclxx";
	reg = <0x6a>;
	interrupt-parent = <&gpio0>;
	interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
	vddio-supply = <&sensors_vddio>;
	vdd-supply = <&sensors_vdd>;
	st,int-pin = <1>;
	st,mlc-int-pin = <2>;
	mount-matrix = "1", "0", "0",
		       "0", "1", "0",
		       "0", "0", "1";
};
