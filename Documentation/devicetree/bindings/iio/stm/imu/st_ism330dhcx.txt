* st_ism330dhcx driver for imu MEMS sensors

Required properties for all bus drivers:
- compatible: must be one of:
              "st,ism330dhcx"

Required properties for the i2c bindings:
- reg:               i2c slave address

Required properties for the spi bindings:
- reg:                the chipselect index

- spi-max-frequency:  maximal bus speed, should be set to 10000000 unless
                      constrained by external circuitry

Optional properties  for all bus drivers:
- st,int-pin:        the pin on the package that will be used to signal
                     "data ready" (valid values: 1 or 2, default: 1).

- st,mlc-int-pin:    the pin on the package that will be used to signal
                     MLC/FSM event (valid values: 1 for int pin 1, 2 for
                     int pin 2 or 3 for both int pin, default: st,int-pin).

- drive-open-drain:  the interrupt/data ready line will be configured as open drain,
                     which is useful if several sensors share the same interrupt line.

- interrupts:        interrupt mapping for IRQ. It should be configured with
                     flags IRQ_TYPE_LEVEL_HIGH, IRQ_TYPE_EDGE_RISING,
                     IRQ_TYPE_LEVEL_LOW or IRQ_TYPE_EDGE_FALLING.

                     Refer to interrupt-controller/interrupts.txt for generic interrupt
                     client node bindings.

- drive-pullup-shub: enable pull up on the i2c master interface. Default is disabled.

- st,module_id:      module identifier.
                     This is used by user-space to identify which devices
                     are part of the same module (particularly important for
                     supporting multiple sensors of the same type).

- wakeup-source:     https://www.kernel.org/doc/Documentation/devicetree/bindings/power/wakeup-source.txt

Example for an spi device node:

ism330dhcx-imu@0 {
        compatible = "st,ism330dhcx";
        reg = <0x0>;
        spi-max-frequency = <10000000>;
        interrupt-parent = <&gpio0>;
        interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
        st,module_id = <1>;
        st,int-pin = <1>;
};

Example for an i2c device node:

ism330dhcx-imu@6b {
        compatible = "st,ism330dhcx";
        reg = <0x6b>;
        interrupt-parent = <&gpio0>;
        interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
        st,module_id = <1>;
        st,int-pin = <1>;
};
