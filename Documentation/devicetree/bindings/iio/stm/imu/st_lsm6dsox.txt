* st_lsm6dsox driver for imu MEMS sensors

Required properties for all bus drivers:
- compatible: must be one of:
              "st,lsm6dso"
              "st,lsm6dsox"
              "st,lsm6dso32"
              "st,lsm6dso32x"

Required properties for the i2c bindings:
- reg: i2c slave address

Required properties for the spi bindings:
- reg:               the chipselect index

- spi-max-frequency: maximal bus speed, should be set to 10000000 unless
                     constrained by external circuitry

Optional properties for all bus drivers:
- vdd-supply:       an optional regulator that needs to be on to provide VDD
                    power to the sensor.

- vddio-supply:     an optional regulator that needs to be on to provide the
                    VDD IO power to the sensor.

- st,int-pin:       the pin on the package that will be used to signal
                    "data ready" (valid values: 1 or 2, default: 1).

- mount-matrix:     mount rotation matrix.

                    Refer to iio/mount-matrix.txt for details.

- drive-open-drain: the interrupt/data ready line will be configured as open drain,
                    which is useful if several sensors share the same interrupt line.

- interrupts:       interrupt mapping for IRQ. It should be configured with
                    flags IRQ_TYPE_LEVEL_HIGH, IRQ_TYPE_EDGE_RISING,
                    IRQ_TYPE_LEVEL_LOW or IRQ_TYPE_EDGE_FALLING.

                    Refer to interrupt-controller/interrupts.txt for generic interrupt
                    client node bindings.

- st,module_id:     module identifier.
                    This is used by user-space to identify which devices
                    are part of the same module (particularly important for
                    supporting multiple sensors of the same type).

- wakeup-source:    https://www.kernel.org/doc/Documentation/devicetree/bindings/power/wakeup-source.txt

Example for an spi device node:

lsm6dsox-imu@0 {
        compatible = "st,lsm6dsox";
        reg = <0x0>;
        spi-max-frequency = <10000000>;
        interrupt-parent = <&gpio0>;
        interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
        vddio-supply = <&sensors_vddio>;
        vdd-supply = <&sensors_vdd>;
        st,int-pin = <1>;
        mount-matrix = "1", "0", "0",
                       "0", "1", "0",
                       "0", "0", "1";
        st,module_id = <1>;
};

Example for an i2c device node:

lsm6dsox-imu@6b {
        compatible = "st,lsm6dsox";
        reg = <0x6b>;
        interrupt-parent = <&gpio0>;
        interrupts = <0 IRQ_TYPE_LEVEL_HIGH>;
        vddio-supply = <&sensors_vddio>;
        vdd-supply = <&sensors_vdd>;
        st,int-pin = <1>;
        mount-matrix = "1", "0", "0",
                       "0", "1", "0",
                       "0", "0", "1";
        st,module_id = <1>;
};
